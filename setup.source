## NOTE! This script should be sourced, not executed. 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
if test -z "$BASH"
then echo "Please, source me using bash." ; kill -INT $$
fi
if [[ "${BASH_SOURCE[0]}" == "${0}" ]] 
then echo "You must source this script with bash, not execute it." ; kill -INT $$
fi

# versions
export PS1="[\W]\$ "
export NODENV_VERSION=16.13.0
export PYENV_VERSION=3.9.9
export GOENV_VERSION=1.17.3

# env roots
export PYENV_ROOT="$HOME/.pyenv"
export NODENV_ROOT="$HOME/.nodenv"
export GOENV_ROOT="$HOME/.goenv"

# Preflight checks
die() {
    echo ERROR: "$@"
    kill -INT $$
}

ok() {
    echo OK: "$@"
}

if ! which git >/dev/null
then die "Git is required"
else ok git
fi

if ! which gcc >/dev/null
then die "Please install development tools"
else ok gcc
fi

if ! which docker >/dev/null
then die "Please install docker and assign access to this user"
else ok docker
fi

# Install
if ! test -d $GOENV_ROOT
then git clone https://github.com/syndbg/goenv.git $GOENV_ROOT
else ok goenv
fi

if ! test -e $NODENV_ROOT
then git clone https://github.com/nodenv/nodenv.git $NODENV_ROOT
     mkdir "$NODENV_ROOT/plugins"
     git clone https://github.com/nodenv/node-build.git "$NODENV_ROOT"/plugins/node-build
else ok nodenv
fi

if ! test -e $PYENV_ROOT
then git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT
else ok pyenv
fi

export GOBIN="$HOME/.local/bin"
export PATH="$GOBIN:$GOENV_ROOT/bin:$NODENV_ROOT/bin:$PYENV_ROOT/bin:$PATH"

eval "$(nodenv init -)"
nodenv install $NODENV_VERSION -s
echo $NODENV_VERSION >.node-version

eval "$(pyenv init --path)"
eval "$(pyenv init -)"
pyenv install $PYENV_VERSION -s
echo $PYENV_VERSION >.python-version

eval "$(goenv init -)"
goenv install $GOENV_VERSION -s
echo $GOENV_VERSION >.go-version

# install task
if ! which task >/dev/null
then go install github.com/go-task/task/v3/cmd/task@latest
else ok task
fi

# install ansible
if ! which ansible >/dev/null
then pip install ansible
else ok ansible
fi

# install httpie
if ! which http >/dev/null
then pip install httpie
else ok httpie
fi

# install addlicense
if ! which license-eye >/dev/null
then go install github.com/apache/skywalking-eyes/cmd/license-eye@latest
else ok license-eye
fi

# install pdm
if ! which pdm >/dev/null
then curl -sSL https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py | python -
else ok pdm
fi

# install jest
if ! nodenv which jest >/dev/null
then npm install -g jest
else echo ok jest
fi
export PATH="$(nodenv prefix)/bin:$PATH"


# check kubernetes configuration
if test -e /.dockerenv
then
    if test -e ../kubeconfig
    then sudo cp ../kubeconfig /etc/kubeconfig
    fi
    if test -e ./kubeconfig
    then sudo cp kubeconfig /etc/kubeconfig
    fi
    if ! test -e /etc/kubeconfig
    then die <<END
No kubeconfig found. Please either 
- copy your ~/.kube/config in this folder as "kubeconfig" 
- copy your ~/.kube/config in this container as "/etc/kubeconfig"
END
    fi
fi

# local setup
task setup
